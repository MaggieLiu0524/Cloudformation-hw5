{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "InstanceType": {
      "Description": "Server instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small"
      ],
      "ConstraintDescription": "Must be a valid EC2 type."
    },

    "KeyPair": {
      "Description": "Name of your EC2 KeyPair to enable SSH access to the instances.",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },

    "YourIp": {
      "Description": "The current CIDR IP address of your workstation (x.x.x.x/32). http://checkip.amazonaws.com/",
      "Type": "String"
    }
},
  "Resources": {
    "EngineeringVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": "10.0.0.0/18",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Test"
          }
        ]
      }
    },

    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "EngineeringVpc"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "EngineeringVpc"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": [
        "InternetGateway"
      ]
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "MapPublicIpOnLaunch" : "true",
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone" : {
          "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" }}]
        },
        "Tags" : [
          { "Key": "Name",
            "Value": "Website-Public-Subnet"
          }
        ]
      }
    },

    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "MapPublicIpOnLaunch" : "true",
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone" : {
          "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" }}]
        },
        "Tags" : [
          { "Key": "Name",
            "Value": "Website-Public-Subnet"
          }
        ]
      }
    },
    "PublicSubnet1RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      }
    },

    "Web1": {
      "Type": "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType": {"Ref": "InstanceType"},
        "ImageId": "ami-3ea13f29",
        "SubnetId": { "Ref": "PublicSubnet1" },
        "SecurityGroupIds": [
          { "Ref": "WebserversSG"}
        ],
        "Tags" : [
          { "Key": "Name",
            "Value": "web1"
          }
        ]
      }
    },

    "Web2": {
      "Type": "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType": {"Ref": "InstanceType"},
        "ImageId": "ami-3ea13f29",
        "SubnetId": { "Ref": "PublicSubnet2" },
        "SecurityGroupIds": [
          { "Ref": "WebserversSG"}
        ],
        "Tags" : [
          { "Key": "Name",
            "Value": "web2"
          }
        ]
      }
    },

    "WebserversSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group rules for webserver host.",
        "GroupName":"WebserversSG",
        "VpcId": {"Ref": "EngineeringVpc" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {"Ref": "YourIp"}
          }
        ]
      }
  },

  "EngineeringLB":{
    "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
    "Properties" : {
        "Name" : "EngineeringLB",
        "SecurityGroups" : [ {"Ref":"WebserversSG"} ],
        "Subnets" : [ {"Ref":"PublicSubnet1"}, {"Ref":"PublicSubnet2"}],
        "Tags" : [ {
          "Key" : "Name",
          "Value" : "engineering-lb"}],
        "Type" : "application"
      }
  },

  "EngineeringListener":{
    "Type" : "AWS::ElasticLoadBalancingV2::Listener",
    "Properties" : {
        "DefaultActions" : [ 
          {
            "TargetGroupArn" : {"Ref": "EngineeringWebservers"},
            "Type" : "forward"
          }
    ],
        "LoadBalancerArn" : {"Ref":"EngineeringLB"},
        "Port" : 80,
        "Protocol" : "HTTP"
      }
  },

  "EngineeringWebservers":{
    "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
    "Properties" : {
        "Name" : "EngineeringWebservers",
        "Port" : 80,
        "Protocol" : "HTTP",
        "Tags" : [ {
          "Key" : "Name",
          "Value" : "engineering-tg"
        }],
        "Targets" : [ 
          { 
             "Id": {"Ref" :"Web1"}, 
             "Port": 80 
          },
         { 
          "Id": {"Ref" :"Web2"}, 
          "Port": 80
          }
        ],
        "TargetType" : "instance",
        "VpcId" : {"Ref":"EngineeringVpc"}
      }
  }
},

"Outputs": {
        "LoadBalancerDNSName" : {
         "Description": "The DNS Name of the load balancer",  
          "Value" : { "Fn::GetAtt" : [ "EngineeringLB", "DNSName" ]}
      }
    }
  }